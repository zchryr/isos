name: 'Debian ISO'

on:
  push:
    branches:
      - main
  workflow_dispatch: # Manual trigger.
  schedule:
    - cron: '0 0 * * MON' # Every Monday.

jobs:
  get-latest-download-url:
    name: 'Get Latest Download URL'
    runs-on: ubuntu-latest
    outputs:
      url: ${{ steps.get_url.outputs.download_url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4.1.0
        with:
          go-version: '1.21'

      - name: Run Go Program to Get Debian ISO URL
        id: get_url
        working-directory: ./debian
        run: |
          go run main.go

  download-debian-iso:
    name: 'Download Latest Debian ISO'
    runs-on: self-hosted
    needs: get-latest-download-url

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4.1.0
        with:
          go-version: '1.21'

      - name: Download Debian ISO
        run: |
          wget ${{ needs.get-latest-download-url.outputs.url }}

      - name: Download Debian SHA256SUMS
        run: |
          wget https://cdimage.debian.org/debian-cd/current/amd64/iso-cd/SHA256SUMS

      - name: Re-write SHA File
        run: |
          go run ./debian/sha.go $(ls | grep debian*iso)

      - name: Verify SHA of ISO
        run: |
          sha256sum -c SHA256SUMS

      - name: Latest Debian ISO -> NAS
        run: |
          VERSION=$(ls | grep debian*iso | awk -F'[-.]' '{print $2}')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          mv *.iso "debian-netinst-$VERSION-latest.iso"
          sshpass -p "${{ secrets.NAS_PASSWORD }}" scp -o StrictHostKeyChecking=no "debian-netinst-$VERSION-latest.iso" ${{ secrets.NAS_USERNAME }}@${{ secrets.NAS_IP}}:${{ secrets.NAS_ISO_PATH }}"debian-netinst-$VERSION-latest.iso"

      - name: Create JSON Object
        run: |
          echo JSON="{\"debian\":\"debian-netinst-${VERSION}-latest.iso\"}" >> $GITHUB_ENV

      - name: Build Notification
        uses: zchryr/build-notifier-action@v1.0.11
        with:
          body: ${{ env.JSON }}
          url: ${{ secrets.WEBHOOK }}
          response_code: 201
          repo: ${{ github.repository }}
          workflow: $WORKFLOW
        env:
          WORKFLOW: ${{ github.workflow }}

      - name: Clean Workspace
        if: always()
        uses: AutoModality/action-clean@v1.1.1
