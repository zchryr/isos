name: 'Debian ISO'

on:
  push:
    branches:
      - main
      - 15-refactor-debian
  workflow_dispatch: # Manual trigger.
  schedule:
    - cron: '0 0 * * MON' # Every Monday.

jobs:
  get-latest-download-url:
    name: 'Get Latest Download URL'
    runs-on: ubuntu-latest
    outputs:
      url: ${{ steps.get_url.outputs.download_url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Run Python Program to Get Debian ISO URL
        id: get_url
        working-directory: ./debian
        run: |
          pip3 install -q -r requirements.txt
          python3 metadata.py

      - name: print env vars
        run: |
          printenv

      - name: echo output
        run: |
          echo "${{ steps.get_url.outputs.download_url }}"

  download-debian-iso:
    name: 'Download Latest Debian ISO'
    runs-on: self-hosted
    needs: get-latest-download-url

    steps:
      - name: echo
        run: |
          echo "${{ needs.get-latest-download-url.outputs.url }}"

      # - name: Checkout code
      #   uses: actions/checkout@v4

      # - uses: actions/setup-python@v4
      #   with:
      #     python-version: '3.11'

      # - name: Download Debian ISO
      #   run: |
      #     wget ${{ needs.get-latest-download-url.outputs.url }}

      # - name: Download Debian SHA256SUMS
      #   run: |
      #     wget https://cdimage.debian.org/debian-cd/current/amd64/iso-cd/SHA256SUMS

      # - name: Re-write SHA File
      #   run: |
      #     python3 ./debian/sha.py $(ls | grep debian*iso)

      # - name: Verify SHA of ISO
      #   run: |
      #     sha256sum -c SHA256SUMS

      # - name: Latest Debian ISO -> NAS
      #   run: |
      #     VERSION=$(ls | grep debian*iso | awk -F'[-.]' '{print $2}')
      #     echo "VERSION=$VERSION" >> $GITHUB_ENV
      #     mv *.iso "debian-netinst-$VERSION-latest.iso"
      #     sshpass -p "${{ secrets.NAS_PASSWORD }}" scp -o StrictHostKeyChecking=no "debian-netinst-$VERSION-latest.iso" ${{ secrets.NAS_USERNAME }}@${{ secrets.NAS_IP}}:${{ secrets.NAS_ISO_PATH }}"debian-netinst-$VERSION-latest.iso"

      # - name: Create JSON Object
      #   run: |
      #     echo JSON="{\"debian\":\"debian-netinst-${VERSION}-latest.iso\"}" >> $GITHUB_ENV

      # - name: Build Notification
      #   uses: zchryr/notifier@main
      #   with:
      #     input: ${{ env.JSON }}
      #     url: '${{ secrets.WEBHOOK }}'
      #     response_code: '201'

      # - name: Clean Workspace
      #   if: always()
      #   run: |
      #     rm -rf *
